getwd()
library(devtools)
devtools::install_github("renanxcortes/springerQuarantineBooksR")
library(springerQuarantineBooksR)
setwd('C:\\Users\\renan.cortes\\Desktop\\teste')
books_list_url <- 'https://resource-cms.springernature.com/springer-cms/rest/v1/content/17858272/data/v4/'
GET(books_list_url, write_disk(tf <- tempfile(fileext = ".xlsx")))
springer_table <- read_excel(tf)
specific_title_list <- springer_table %>%
filter(str_detect(`Book Title`, 'Data Science')) %>%
pull(`Book Title`)
generate_springer_book_files(specific_title_list)
tic('Total time: ')
generate_springer_book_files()
toc()
book_title <- "Ceramic Materials"
file_sep <- .Platform$file.sep
aux <- springer_table %>%
filter(`Book Title` == book_title)
aux
View(aux)
aux %>% arrange(Year)
aux %>% arrange(`Copyright Year`)
aux %>% arrange(desc(`Copyright Year`)) %>% slice(1)
fetch_single_pdf <- function(book_title, springer_table){
file_sep <- .Platform$file.sep
aux <- springer_table %>%
filter(`Book Title` == book_title) %>%
arrange(desc(`Copyright Year`)) %>%
slice(1)
author <- aux$Author
en_book_type <- aux$`English Package Name`
download_url <- aux$OpenURL %>%
GET() %>%
extract2('url') %>%
str_replace('book', paste0('content', file_sep, 'pdf')) %>%
str_replace('%2F', file_sep) %>%
paste0('.pdf')
pdf_file = GET(download_url)
write.filename = file(paste0(book_title, " - ", author, ".pdf"), "wb")
writeBin(pdf_file$content, write.filename)
close(write.filename)
}
generate_springer_book_files <- function(springer_books_titles = NA, springer_table = NA) {
if (is.na(springer_table)) {
books_list_url <- 'https://resource-cms.springernature.com/springer-cms/rest/v1/content/17858272/data/v4/'
GET(books_list_url, write_disk(tf <- tempfile(fileext = ".xlsx")))
springer_table <- read_excel(tf)
}
if (is.na(springer_books_titles)) { springer_books_titles <- springer_table$`Book Title`}
n <- length(springer_books_titles)
i <- 1
for (title in springer_books_titles) {
print(paste0('Processing... ', title, ' (', i, ' out of ', n, ')'))
en_book_type <- springer_table %>%
filter(`Book Title` == title) %>%
pull(`English Package Name`)
current_folder = file.path('springer_downloads', en_book_type)
if (!dir.exists(current_folder)) { dir.create(current_folder, recursive = T) }
setwd(current_folder)
tic('Time processed')
fetch_single_pdf(title, springer_table)
toc()
setwd(file.path('.', '..', '..'))
i <- i + 1
}
}
library(tidyverse)
library(tictoc)
library(httr)
setwd('C:\\Users\\renan.cortes\\Desktop\\teste')
tic('Total time: ')
generate_springer_book_files()
toc()
library(readxl)
tic('Total time: ')
generate_springer_book_files()
toc()
library(magrittr)
tic('Total time: ')
generate_springer_book_files()
toc()
1979/60
getwd()
current_folder
springer_table$`Book Title`
books_list_url <- 'https://resource-cms.springernature.com/springer-cms/rest/v1/content/17858272/data/v4/'
GET(books_list_url, write_disk(tf <- tempfile(fileext = ".xlsx")))
springer_table <- read_excel(tf)
springer_books_titles <- springer_table$`Book Title`
length(springer_books_titles)
length(unique(springer_books_titles))
title
title <- 'Ceramic Materials'
en_book_type <- springer_table %>%
filter(`Book Title` == title) %>%
pull(`English Package Name`)
en_book_type
en_book_type <- springer_table %>%
filter(`Book Title` == title) %>%
pull(`English Package Name`) %>%
unique()
en_book_type
en_book_type <- springer_table %>%
filter(`Book Title` == title) %>%
pull(`English Package Name`) #%>%
current_folder = file.path('springer_downloads', en_book_type)
current_folder
fetch_single_pdf <- function(book_title, springer_table){
file_sep <- .Platform$file.sep
aux <- springer_table %>%
filter(`Book Title` == book_title) %>%
arrange(desc(`Copyright Year`)) %>%
slice(1)
author <- aux$Author
en_book_type <- aux$`English Package Name`
download_url <- aux$OpenURL %>%
GET() %>%
extract2('url') %>%
str_replace('book', paste0('content', file_sep, 'pdf')) %>%
str_replace('%2F', file_sep) %>%
paste0('.pdf')
pdf_file = GET(download_url)
write.filename = file(paste0(book_title, " - ", author, ".pdf"), "wb")
writeBin(pdf_file$content, write.filename)
close(write.filename)
}
generate_springer_book_files <- function(springer_books_titles = NA, springer_table = NA) {
if (is.na(springer_table)) {
books_list_url <- 'https://resource-cms.springernature.com/springer-cms/rest/v1/content/17858272/data/v4/'
GET(books_list_url, write_disk(tf <- tempfile(fileext = ".xlsx")))
springer_table <- read_excel(tf)
}
if (is.na(springer_books_titles)) { springer_books_titles <- springer_table$`Book Title` %>% unique()}
n <- length(springer_books_titles)
i <- 1
for (title in springer_books_titles) {
print(paste0('Processing... ', title, ' (', i, ' out of ', n, ')'))
en_book_type <- springer_table %>%
filter(`Book Title` == title) %>%
pull(`English Package Name`) %>%
unique()
current_folder = file.path('springer_downloads', en_book_type)
if (!dir.exists(current_folder)) { dir.create(current_folder, recursive = T) }
setwd(current_folder)
tic('Time processed')
fetch_single_pdf(title, springer_table)
toc()
setwd(file.path('.', '..', '..'))
i <- i + 1
}
}
getwd()
setwd('C:\\Users\\renan.cortes\\Desktop\\teste2')
tic('Total time: ')
generate_springer_book_files()
toc()
devtools::install_github("renanxcortes/springerQuarantineBooksR")
library(springerQuarantineBooksR)
devtools::install_github("renanxcortes/springerQuarantineBooksR", force = T)
library(springerQuarantineBooksR)
generate_springer_book_files
devtools::install_github("renanxcortes/springerQuarantineBooksR")
library(springerQuarantineBooksR)
devtools::install_github("renanxcortes/springerQuarantineBooksR")
library(springerQuarantineBooksR)
generate_springer_book_files
devtools::install_github("renanxcortes/springerQuarantineBooksR", force = TRUE)
library(springerQuarantineBooksR)
generate_springer_book_files
library(springerQuarantineBooksR)
generate_springer_book_files
setwd('C:\\Users\\renan.cortes\\Desktop\\teste2')
tic('Total time: ')
generate_springer_book_files()
toc()
book_title <- "Scanning Electron Microscopy and X-Ray Microanalysis"
aux <- springer_table %>%
filter(`Book Title` == book_title) %>%
arrange(desc(`Copyright Year`)) %>%
slice(1)
books_list_url <- 'https://resource-cms.springernature.com/springer-cms/rest/v1/content/17858272/data/v4/'
GET(books_list_url, write_disk(tf <- tempfile(fileext = ".xlsx")))
springer_table <- read_excel(tf)
file_sep <- .Platform$file.sep
aux <- springer_table %>%
filter(`Book Title` == book_title) %>%
arrange(desc(`Copyright Year`)) %>%
slice(1)
aux
author <- aux$Author
en_book_type <- aux$`English Package Name`
download_url <- aux$OpenURL %>%
GET() %>%
extract2('url') %>%
str_replace('book', paste0('content', file_sep, 'pdf')) %>%
str_replace('%2F', file_sep) %>%
paste0('.pdf')
download_url
pdf_file = GET(download_url)
paste0(book_title, " - ", author, ".pdf")
write.filename = file(paste0(book_title, " - ", author, ".pdf"), "wb")
writeBin(pdf_file$content, write.filename)
getwd()
paste0(book_title, " - ", author, ".pdf")
close(write.filename)
write.filename = file(paste0(book_title, " - ", author, ".pdf"), "wb")
book_title
#write.filename = file(paste0(book_title, " - ", author, ".pdf"), "wb")
write.filename = file(paste0(book_title, ".pdf"), "wb")
View(aux)
write.filename = file(paste0(book_title, " - ", edition, ".pdf"), "wb")
edition <- aux$Edition
write.filename = file(paste0(book_title, " - ", edition, ".pdf"), "wb")
writeBin(pdf_file$content, write.filename)
close(write.filename)
setwd('C:\Users\renan.cortes\Desktop\teste3')
setwd('C:\\Users\\renan.cortes\\Desktop\\teste3')
fetch_single_pdf <- function(book_title, springer_table){
file_sep <- .Platform$file.sep
aux <- springer_table %>%
filter(`Book Title` == book_title) %>%
arrange(desc(`Copyright Year`)) %>%
slice(1)
edition <- aux$Edition
en_book_type <- aux$`English Package Name`
download_url <- aux$OpenURL %>%
GET() %>%
extract2('url') %>%
str_replace('book', paste0('content', file_sep, 'pdf')) %>%
str_replace('%2F', file_sep) %>%
paste0('.pdf')
pdf_file = GET(download_url)
write.filename = file(paste0(book_title, " - ", edition, ".pdf"), "wb")
writeBin(pdf_file$content, write.filename)
close(write.filename)
}
generate_springer_book_files <- function(springer_books_titles = NA, springer_table = NA) {
if (is.na(springer_table)) {
books_list_url <- 'https://resource-cms.springernature.com/springer-cms/rest/v1/content/17858272/data/v4/'
GET(books_list_url, write_disk(tf <- tempfile(fileext = ".xlsx")))
springer_table <- read_excel(tf)
}
if (is.na(springer_books_titles)) { springer_books_titles <- springer_table$`Book Title` %>% unique()}
n <- length(springer_books_titles)
i <- 1
warning("Downloading title latest editions.")
for (title in springer_books_titles) {
print(paste0('Processing... ', title, ' (', i, ' out of ', n, ')'))
en_book_type <- springer_table %>%
filter(`Book Title` == title) %>%
pull(`English Package Name`) %>%
unique()
current_folder = file.path('springer_downloads', en_book_type)
if (!dir.exists(current_folder)) { dir.create(current_folder, recursive = T) }
setwd(current_folder)
tic('Time processed')
fetch_single_pdf(title, springer_table)
toc()
setwd(file.path('.', '..', '..'))
i <- i + 1
}
}
tic('Total time: ')
generate_springer_book_files()
toc()
generate_springer_book_files <- function(springer_books_titles = NA, springer_table = NA) {
if (is.na(springer_table)) {
books_list_url <- 'https://resource-cms.springernature.com/springer-cms/rest/v1/content/17858272/data/v4/'
GET(books_list_url, write_disk(tf <- tempfile(fileext = ".xlsx")))
springer_table <- read_excel(tf)
}
if (is.na(springer_books_titles)) { springer_books_titles <- springer_table$`Book Title` %>% unique()}
n <- length(springer_books_titles)
i <- 1
print("Downloading title latest editions.")
for (title in springer_books_titles) {
print(paste0('Processing... ', title, ' (', i, ' out of ', n, ')'))
en_book_type <- springer_table %>%
filter(`Book Title` == title) %>%
pull(`English Package Name`) %>%
unique()
current_folder = file.path('springer_downloads', en_book_type)
if (!dir.exists(current_folder)) { dir.create(current_folder, recursive = T) }
setwd(current_folder)
tic('Time processed')
fetch_single_pdf(title, springer_table)
toc()
setwd(file.path('.', '..', '..'))
i <- i + 1
}
}
setwd('C:\\Users\\renan.cortes\\Desktop\\teste4')
fetch_single_pdf <- function(book_title, springer_table){
file_sep <- .Platform$file.sep
aux <- springer_table %>%
filter(`Book Title` == book_title) %>%
arrange(desc(`Copyright Year`)) %>%
slice(1)
edition <- aux$Edition
en_book_type <- aux$`English Package Name`
download_url <- aux$OpenURL %>%
GET() %>%
extract2('url') %>%
str_replace('book', paste0('content', file_sep, 'pdf')) %>%
str_replace('%2F', file_sep) %>%
paste0('.pdf')
pdf_file = GET(download_url)
write.filename = file(paste0(book_title, " - ", edition, ".pdf"), "wb")
writeBin(pdf_file$content, write.filename)
close(write.filename)
}
generate_springer_book_files <- function(springer_books_titles = NA, springer_table = NA) {
if (is.na(springer_table)) {
books_list_url <- 'https://resource-cms.springernature.com/springer-cms/rest/v1/content/17858272/data/v4/'
GET(books_list_url, write_disk(tf <- tempfile(fileext = ".xlsx")))
springer_table <- read_excel(tf)
}
if (is.na(springer_books_titles)) { springer_books_titles <- springer_table$`Book Title` %>% unique()}
n <- length(springer_books_titles)
i <- 1
print("Downloading title latest editions.")
for (title in springer_books_titles) {
print(paste0('Processing... ', title, ' (', i, ' out of ', n, ')'))
en_book_type <- springer_table %>%
filter(`Book Title` == title) %>%
pull(`English Package Name`) %>%
unique()
current_folder = file.path('springer_downloads', en_book_type)
if (!dir.exists(current_folder)) { dir.create(current_folder, recursive = T) }
setwd(current_folder)
tic('Time processed')
fetch_single_pdf(title, springer_table)
toc()
setwd(file.path('.', '..', '..'))
i <- i + 1
}
}
tic('Total time: ')
generate_springer_book_files()
toc()
book_title <- 'Systems Programming in Unix/Linux'
file_sep <- .Platform$file.sep
aux <- springer_table %>%
filter(`Book Title` == book_title) %>%
arrange(desc(`Copyright Year`)) %>%
slice(1)
aux
edition <- aux$Edition
en_book_type <- aux$`English Package Name`
download_url <- aux$OpenURL %>%
GET() %>%
extract2('url') %>%
str_replace('book', paste0('content', file_sep, 'pdf')) %>%
str_replace('%2F', file_sep) %>%
paste0('.pdf')
pdf_file = GET(download_url)
write.filename = file(paste0(book_title, " - ", edition, ".pdf"), "wb")
writeBin(pdf_file$content, write.filename)
book_title <- str_replace(book_title, '/', '-')
book_title
write.filename = file(paste0(book_title, " - ", edition, ".pdf"), "wb")
writeBin(pdf_file$content, write.filename)
close(write.filename)
continue <- springer_table$`Book Title` %>% unique()
continue <- springer_table$`Book Title` %>% unique() %>% slice(335:391)
continue <- springer_table$`Book Title` %>% unique()
continue[335:391]
continue[33:391]
continue[336:391]
generate_springer_book_files(continue[336:391])
devtools::install_github("renanxcortes/springerQuarantineBooksR")
